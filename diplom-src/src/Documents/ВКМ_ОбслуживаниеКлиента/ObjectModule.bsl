
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если НЕ ЗначениеЗаполнено(Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить()) Тогда
		
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Не заполнена константа 'Номенклатура абоненская плата'", , , , Истина);
		Возврат;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить()) Тогда
		
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Не заполнена константа 'Номенклатура работы специалиста'", , , , Истина);
		Возврат;
		
	КонецЕсли;
	
	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор,
		"ВидДоговора,
		|ВКМ_ДатаНачалаДействияДоговора,
		|ВКМ_ДатаОкончанияДействияДоговора,
		|ВКМ_СтоимостьЧасаРаботыСпециалиста");
		
	Если РеквизитыДоговора.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Договор не является договором вида 'Абонентское обслуживание'.
			|Выберите другой договор или измените вид на 'Абонентское обслуживание'.", , , , Истина);
		Возврат;
		
	КонецЕсли;
		
	Если РеквизитыДоговора.ВКМ_ДатаНачалаДействияДоговора > Дата
		ИЛИ РеквизитыДоговора.ВКМ_ДатаОкончанияДействияДоговора < Дата Тогда
		
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Дата документа не попадает в период действия договора.
			|Укажите другую дату документа.", , , , Истина);
		Возврат;
		
	КонецЕсли;
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Для Каждого ТекущаяСтрока Из ВыполненныеРаботы Цикл
		
		СтоимостьЧасаРаботыСпециалиста = Число(РеквизитыДоговора.ВКМ_СтоимостьЧасаРаботыСпециалиста);
		
		//движения по регистру ВКМ_ВыполненныеКлиентуРаботы
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;	
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = ТекущаяСтрока.ЧасовКОплатеКлиенту;
		Движение.СуммаКОплате = ТекущаяСтрока.ЧасовКОплатеКлиенту * СтоимостьЧасаРаботыСпециалиста;
		
	КонецЦикла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовыйОбъект", ЭтоНовый());
	
	ТекстСообщения = "";
	
	ПроверитьИзменениеРеквизитов(ТекстСообщения, Специалист, "Специалист");
	ПроверитьИзменениеРеквизитов(ТекстСообщения, ДатаПроведенияРабот, "ДатаПроведенияРабот");
	ПроверитьИзменениеРеквизитов(ТекстСообщения, ВремяНачалаРаботПлан, "ВремяНачалаРаботПлан");
	ПроверитьИзменениеРеквизитов(ТекстСообщения, ВремяОкончанияРаботПлан, "ВремяОкончанияРаботПлан");
	
	Если ЗначениеЗаполнено(ТекстСообщения) Тогда
		ДополнительныеСвойства.Вставить("ТекстСообщения", ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.ЭтоНовыйОбъект Тогда 
		
		ТекстСообщения = СтрШаблон("Создан документ №%1 от %2 на обслуживание клиента '%3'.
			|Плановый период работ: %4 с %5 по %6.
			|Исполнитель работ - %7.",
			ПрефиксацияОбъектовКлиентСервер.УдалитьЛидирующиеНулиИзНомераОбъекта(Номер),
			Формат(Дата, "ДЛФ=DD"),
			Клиент,
			Формат(ДатаПроведенияРабот, "ДЛФ=DD"),
			Формат(ВремяНачалаРаботПлан, "ДФ='ЧЧ:мм'"),
			Формат(ВремяОкончанияРаботПлан, "ДФ='ЧЧ:мм'"),
			Специалист);
			
		СоздатьСообщениеТелеграмБоту(ТекстСообщения);
		
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ТекстСообщения") Тогда
		СоздатьСообщениеТелеграмБоту(ДополнительныеСвойства.ТекстСообщения);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьИзменениеРеквизитов(ТекстСообщения, ПроверяемыйРеквизит, ИмяРеквизита)
	
	СтарыйРеквизит = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);
	
	Если ПроверяемыйРеквизит <> СтарыйРеквизит Тогда 
		
		НовоеЗначение = ПроверяемыйРеквизит;
		
		Если ТипЗнч(ПроверяемыйРеквизит) = Тип("Дата") Тогда
			
			Если НачалоДня(ПроверяемыйРеквизит) = Дата("01.01.0001 00:00:00") Тогда
				НовоеЗначение = Формат(ПроверяемыйРеквизит, "ДФ='ЧЧ:мм'");
			Иначе
				НовоеЗначение = Формат(ПроверяемыйРеквизит, "ДЛФ=DD");
			КонецЕсли;
			
		КонецЕсли;
		
		НовыйТекстСообщения = СтрШаблон("Изменен реквизит %1 в документе %2 от %3. Новое значение: %4",
			ИмяРеквизита,
			ПрефиксацияОбъектовКлиентСервер.УдалитьЛидирующиеНулиИзНомераОбъекта(Номер),
			Формат(Дата, "ДЛФ=DD"),
			НовоеЗначение);
			
		Если ТекстСообщения = "" Тогда
			ТекстСообщения = НовыйТекстСообщения;
		Иначе
			МассивСообщений = Новый Массив;
			МассивСообщений.Добавить(ТекстСообщения);
			МассивСообщений.Добавить(НовыйТекстСообщения);
			ТекстСообщения = СтрСоединить(МассивСообщений, Символы.ПС);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьСообщениеТелеграмБоту(ТекстСообщения)
	
	НовоеСообщение = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
	НовоеСообщение.ТекстСообщения = ТекстСообщения;
	НовоеСообщение.Записать();
		
КонецПроцедуры

#КонецОбласти 

#КонецЕсли