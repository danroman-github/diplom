
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если НЕ ЗначениеЗаполнено(Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить()) Тогда
		
		ОбщегоНазначения.СообщитьПользователю("Не заполнена константа 'Номенклатура абоненская плата'", , , , Истина);
		Возврат;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить()) Тогда
		
		ОбщегоНазначения.СообщитьПользователю("Не заполнена константа 'Номенклатура работы специалиста'", , , , Истина);
		Возврат;
		
	КонецЕсли;
	
	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор,
		"ВидДоговора,
		|ВКМ_ДатаНачалаДействияДоговора,
		|ВКМ_ДатаОкончанияДействияДоговора,
		|ВКМ_СтоимостьЧасаРаботыСпециалиста");
		
	Если РеквизитыДоговора.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		
		ОбщегоНазначения.СообщитьПользователю("Договор не является договором вида 'Абонентское обслуживание'.
			|Выберите другой договор или измените вид на 'Абонентское обслуживание'.", , , , Истина);
		Возврат;
		
	КонецЕсли;
		
	Если РеквизитыДоговора.ВКМ_ДатаНачалаДействияДоговора > Дата
		ИЛИ РеквизитыДоговора.ВКМ_ДатаОкончанияДействияДоговора < Дата Тогда
			
		ОбщегоНазначения.СообщитьПользователю("Дата документа не попадает в период действия договора.
			|Укажите другую дату документа.", , , , Истина);
		Возврат;
		
	КонецЕсли;
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Для Каждого ТекущаяСтрока Из ВыполненныеРаботы Цикл
		
		СтоимостьЧасаРаботыСпециалиста = Число(РеквизитыДоговора.ВКМ_СтоимостьЧасаРаботыСпециалиста);
		
		//движения по регистру ВКМ_ВыполненныеКлиентуРаботы
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;	
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = ТекущаяСтрока.ЧасовКОплатеКлиенту;
		Движение.СуммаКОплате = ТекущаяСтрока.ЧасовКОплатеКлиенту * СтоимостьЧасаРаботыСпециалиста;
		
	КонецЦикла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовыйОбъект", ЭтоНовый());
	
	ТекстУведомления = "";
	
	ПроверитьСовпадениеРеквизитов(ТекстУведомления, Специалист, "Специалист");
	ПроверитьСовпадениеРеквизитов(ТекстУведомления, ДатаПроведенияРабот, "ДатаПроведенияРабот");
	ПроверитьСовпадениеРеквизитов(ТекстУведомления, ВремяНачалаРаботПлан, "ВремяНачалаРаботПлан");
	ПроверитьСовпадениеРеквизитов(ТекстУведомления, ВремяОкончанияРаботПлан, "ВремяОкончанияРаботПлан");
	
	Если ЗначениеЗаполнено(ТекстУведомления) Тогда
		ДополнительныеСвойства.Вставить("ТекстУведомления", ТекстУведомления);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьСовпадениеРеквизитов(ТекстУведомления, ПроверяемыйРеквизит, ИмяРеквизита)
	
	СтарыйРеквизит = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);
	
	Если ПроверяемыйРеквизит <> СтарыйРеквизит Тогда
		
		НовыйТекстУведомления = СтрШаблон("Изменен реквизит %1 в документе %2 от %3. Новое значение: %4",
			ИмяРеквизита,
			Номер,
			Дата,
			ПроверяемыйРеквизит);
			
		Если ТекстУведомления = "" Тогда
			ТекстУведомления = НовыйТекстУведомления;
		Иначе
			МассивУведомлений = Новый Массив;
			МассивУведомлений.Добавить(ТекстУведомления);
			МассивУведомлений.Добавить(НовыйТекстУведомления);
			ТекстУведомления = СтрСоединить(МассивУведомлений, Символы.ПС);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли