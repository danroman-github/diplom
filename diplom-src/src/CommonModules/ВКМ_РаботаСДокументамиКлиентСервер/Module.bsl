
//&НаКлиенте
//Процедура ЗаполнитьТабличнуюЧасть() Экспорт
//	
//	СтруктураДанныеОтпуска = Неопределено;
//	КолвоЧасов = КоличествоРабочихЧасовВМесяце(НачалоМесяца(Объект.Дата), КонецМесяца(Объект.Дата));
//	
//	МассивДанныхОСотрудниках = ДанныеПоМесяцуНачисленияНаСервере(Объект.Дата, Объект.Ссылка);
//	
//	Для Индекс = 0 По МассивДанныхОСотрудниках.Количество() - 1 Цикл
//		Элементы.ОсновныеНачисления.ДобавитьСтроку();
//		СтрокаТЧ = Элементы.ОсновныеНачисления.ТекущиеДанные;
//		СтрокаТЧ.ВидРасчета = ПредопределенноеЗначение("ПланВидовРасчета.ВКМ_ОсновныеНачисления.Оклад");
//		СтрокаТЧ.ДатаНачала = НачалоМесяца(Объект.Дата); 
//		СтрокаТЧ.ДатаОкончания = КонецМесяца(Объект.Дата);
//		
//		Если ЗначениеЗаполнено(МассивДанныхОСотрудниках[Индекс].ДатаНачала) Тогда
//			СтруктураДанныеОтпуска = МассивДанныхОСотрудниках[Индекс];	
//		КонецЕсли;
//		
//		СтруктураДанныхОСотрудник = МассивДанныхОСотрудниках[Индекс];
//		
//		СтрокаТЧ.Сотрудник = СтруктураДанныхОСотрудник.Сотрудник;
//		СтрокаТЧ.Подразделение = СтруктураДанныхОСотрудник.Подразделение;
//		СтрокаТЧ.ГрафикРаботы = СтруктураДанныхОСотрудник.ГрафикРаботы;
//		СтрокаТЧ.ЧасовОтработано = КолвоЧасов; 
//		
//	КонецЦикла;
//	
//	Если ЗначениеЗаполнено(СтруктураДанныеОтпуска) Тогда
//		
//		Отбор = Новый Структура();
//		Отбор.Вставить("Сотрудник", СтруктураДанныеОтпуска.Сотрудник);
//		НайденноеЗначение = Объект.ОсновныеНачисления.НайтиСтроки(Отбор);
//		
//		Если ЗначениеЗаполнено(НайденноеЗначение)  Тогда  
//			
//			Если СтруктураДанныеОтпуска.ДатаНачала = НачалоМесяца(Объект.Дата) Тогда
//				НачалоПериода = СтруктураДанныеОтпуска.ДатаОкончания;
//				КонецПериода = КонецМесяца(Объект.Дата);
//				НайденноеЗначение[0].ДатаНачала = НачалоПериода;
//				НайденноеЗначение[0].ЧасовОтработано = КоличествоРабочихЧасовВМесяце(НачалоПериода, КонецПериода);
//			ИначеЕсли СтруктураДанныеОтпуска.ДатаНачала > НачалоМесяца(Объект.Дата) Тогда
//				НачалоПериода = НачалоМесяца(Объект.Дата);
//				КонецПериода = СтруктураДанныеОтпуска.ДатаНачала - 60 * 60 * 24;
//				НайденноеЗначение[0].ДатаОкончания = КонецПериода;
//				НайденноеЗначение[0].ЧасовОтработано = КоличествоРабочихЧасовВМесяце(НачалоПериода, КонецПериода);

//			КонецЕсли;
//				
//		КонецЕсли;
//		
//		Элементы.ОсновныеНачисления.ДобавитьСтроку(); 
//		СтрокаТЧ = Элементы.ОсновныеНачисления.ТекущиеДанные;
//		СтрокаТЧ.ВидРасчета = ПредопределенноеЗначение("ПланВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск");
//		СтрокаТЧ.Сотрудник = СтруктураДанныеОтпуска.Сотрудник; 
//		СтрокаТЧ.Подразделение = СтруктураДанныеОтпуска.Подразделение;
//		СтрокаТЧ.ДатаНачала = СтруктураДанныеОтпуска.ДатаНачала; 
//		СтрокаТЧ.ДатаОкончания = СтруктураДанныеОтпуска.ДатаОкончания;
//		
//	КонецЕсли;
//	
//КонецПроцедуры 

&НаСервереБезКонтекста
Функция ДанныеПоМесяцуНачисленияНаСервере(Дата, Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	    "ВЫБРАТЬ
	    |	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период КАК Период,
	    |	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	    |	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Подразделение КАК Подразделение,
	    |	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ГрафикРаботы КАК ГрафикРаботы,
	    |	ЕСТЬNULL(ВКМ_ГрафикОтпусков.ДатаНачала, 0) КАК ДатаНачала,
	    |	ЕСТЬNULL(ВКМ_ГрафикОтпусков.ДатаОкончания, 0) КАК ДатаОкончания
	    |ПОМЕСТИТЬ ВТ_НаработкаИОтпуск
	    |ИЗ
	    |	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, ) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_ГрафикОтпусков КАК ВКМ_ГрафикОтпусков
	    |		ПО ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник = ВКМ_ГрафикОтпусков.Сотрудник
	    |			И (ВКМ_ГрафикОтпусков.Год = НАЧАЛОПЕРИОДА(&Дата, ГОД))
	    |			И (ВКМ_ГрафикОтпусков.ДатаНачала >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&Дата, МЕСЯЦ, 1), МЕСЯЦ))
	    |			И (ВКМ_ГрафикОтпусков.ДатаОкончания <= КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Дата, МЕСЯЦ, 2), МЕСЯЦ))
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	ВТ_НаработкаИОтпуск.Сотрудник КАК Сотрудник,
	    |	ВТ_НаработкаИОтпуск.Подразделение КАК Подразделение,
	    |	ВТ_НаработкаИОтпуск.ГрафикРаботы КАК ГрафикРаботы,
	    |	ВТ_НаработкаИОтпуск.ДатаНачала КАК ДатаНачала,
	    |	ВТ_НаработкаИОтпуск.ДатаОкончания КАК ДатаОкончания,
	    |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК ЧасовОтработано
	    |ИЗ
	    |	ВТ_НаработкаИОтпуск КАК ВТ_НаработкаИОтпуск
	    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	    |				ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Оклад)
	    |					И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	    |		ПО ВТ_НаработкаИОтпуск.Сотрудник = ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 

	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивСтруктур = Новый Массив;
		
	Пока Выборка.Следующий() Цикл
		
		Сотрудник = Новый Структура;
		Сотрудник.Вставить("Сотрудник",Выборка.Сотрудник);
		Сотрудник.Вставить("Подразделение", Выборка.Подразделение);
		Сотрудник.Вставить("ГрафикРаботы", Выборка.ГрафикРаботы); 
		Сотрудник.Вставить("ЧасовОтработано", Выборка.ЧасовОтработано); 
		Сотрудник.Вставить("ДатаНачала", Выборка.ДатаНачала);
		Сотрудник.Вставить("ДатаОкончания", Выборка.ДатаОкончания);
		МассивСтруктур.Добавить(Сотрудник);
		
	КонецЦикла;
	
	Возврат МассивСтруктур;
	
КонецФункции 

&НаСервереБезКонтекста
Функция КоличествоРабочихЧасовВМесяце(НачалоПериода, КонецПериода) Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ВКМ_ГрафикиРаботы.Значение КАК Значение,
        |	0 КАК Количество
        |ИЗ
        |	РегистрСведений.ВКМ_ГрафикиРаботы КАК ВКМ_ГрафикиРаботы
        |ГДЕ
        |	ВКМ_ГрафикиРаботы.Дата >= &НачалоПериода
        |	И ВКМ_ГрафикиРаботы.Дата <= &КонецПериода
        |	И ВКМ_ГрафикиРаботы.Значение <> 0
        |ИТОГИ
        |	СУММА(Значение)
        |ПО
        |	Количество";
    
    Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
    
    Выборка = Запрос.Выполнить().Выбрать();
    
    КолвоЧасов = 0;
    
    Пока Выборка.Следующий() Цикл
        КолвоЧасов = Число(Выборка.Значение);
		Прервать;
    КонецЦикла;
    
    Возврат КолвоЧасов;
    
КонецФункции