
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Создаёт список реализаций за указанный период.
// Если есть реализация, то она добавляется в массив.
// Если нет реализации, то она сначала слздаётся и потом добавляется в массив.
// 
// Параметры:
// ДатаНачала - Дата
// ДатаОкончания - Дата
// 
// Возвращаемое значение:
//  - Массив из ДокументСсылка.РеализацияТоваровУслуг
Функция СоздатьСписокНаСервере(ДатаНачала, ДатаОкончания) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Договор,
		|	ДоговорыКонтрагентов.Организация КАК Организация,
		|	ДоговорыКонтрагентов.Владелец КАК Владелец,
		|	ДоговорыКонтрагентов.ВКМ_СуммаАбонентскойПлаты КАК АбонентскаяПлата
		|ПОМЕСТИТЬ ВТ_Договоры
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
		|	И ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействияДоговора <= &ДатаОкончания
		|	И ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействияДоговора >= &ДатаНачала
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Договор.Ссылка КАК Реализации
		|ПОМЕСТИТЬ ВТ_Реализации
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Договор.ВидДоговора = &ВидДоговора
		|	И РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Договоры.Договор КАК Договор,
		|	ВТ_Договоры.Организация КАК Организация,
		|	ВТ_Договоры.Владелец КАК Владелец,
		|	ВТ_Договоры.АбонентскаяПлата КАК АбонентскаяПлата
		|ИЗ
		|	ВТ_Договоры КАК ВТ_Договоры
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реализации КАК ВТ_Реализации
		|		ПО ВТ_Договоры.Договор.Ссылка = ВТ_Реализации.Реализации.Ссылка";
	
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	СписокРеализацийМассив = Новый Массив;
		
	Пока Выборка.Следующий() Цикл
		
		СписокРеализацийСтруктура = Новый Структура;
		
		НоваяРеализация = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
		НоваяРеализация.Дата = ДатаОкончания; 
		НоваяРеализация.Ответственный = Пользователи.ТекущийПользователь(); 
		НоваяРеализация.Договор = Выборка.Договор;
		НоваяРеализация.Контрагент = Выборка.Владелец;
		НоваяРеализация.Организация = Выборка.Организация;
		НоваяРеализация.Основание = Выборка.Договор;
		НоваяРеализация.Комментарий = "Документ создан автоматической обработкой Массовое создание актов.";
		НоваяРеализация.ВКМ_ВыполнитьАвтозаполнение(Выборка.Договор);
		
		Если НоваяРеализация.ПроверитьЗаполнение() Тогда
			
			Попытка
				НоваяРеализация.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
				СписокРеализацийСтруктура.Вставить("Договор", Выборка.Договор);
				СписокРеализацийСтруктура.Вставить("Реализация", НоваяРеализация.Ссылка);	
			Исключение
				КоментВЖурнал = СтрШаблон("По клиенту ""%2"" по договору ""%1"" не удалось создать Реализацию. 
					|Дата документа не попадает в период действия договора. 
					|Укажите другую дату.", 
					Выборка.Договор, 
					Выборка.Владелец);
				ЗаписьЖурналаРегистрации("Обработка Массовое создание актов", 
					УровеньЖурналаРегистрации.Ошибка,,, 
					КоментВЖурнал);
				СписокРеализацийСтруктура.Вставить("Договор", Выборка.Договор);
				СписокРеализацийСтруктура.Вставить("Реализация", );
			КонецПопытки;
			
		Иначе
			
			Инфо = ИнформацияОбОшибке();
			ЗаписьЖурналаРегистрации("Обработка Массовое создание актов", 
				УровеньЖурналаРегистрации.Ошибка,,, 
				Инфо);
			СписокРеализацийСтруктура.Вставить("Договор", Выборка.Договор);
			СписокРеализацийСтруктура.Вставить("Реализация", );
			
		КонецЕсли;
		
		СписокРеализацийМассив.Добавить(СписокРеализацийСтруктура);
		
	КонецЦикла; 
		
	Возврат СписокРеализацийМассив;
	
КонецФункции 

#КонецОбласти

#КонецЕсли