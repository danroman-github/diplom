
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
		
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

// ВКМ_ДоработкиНачало 20.03.2024
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктОбОказанныхУслугах";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказанных услугах'");
	КомандаПечати.Порядок = 5;
		
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм,	"АктОбОказанныхУслугах");
	Если ПечатнаяФорма <> Неопределено Тогда		
		ПечатнаяФорма.ТабличныйДокумент = ПечатьАктаОбОказанныхУслугах(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акт об оказанных услугах'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.РеализацияТоваровУслуг.ПФ_MXL_АктОбОказанныхУслугах";		
	КонецЕсли;
		
КонецПроцедуры
// ВКМ_ДоработкиКонец 20.03.2024 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// ВКМ_ДоработкиНачало 20.03.2024
Функция ПечатьАктаОбОказанныхУслугах(МассивОбъектов, ОбъектыПечати)
	
	ТабДок = Новый ТабличныйДокумент;

    Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ПФ_MXL_АктОбОказанныхУслугах");
    
    ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов); 
    
    ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
    ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
    ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
    ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
    ТабДок.Очистить();
    
	ВставлятьРазделительСтраниц = Ложь;	
	Пока ДанныеДокументов.Следующий() Цикл
		
		Если НЕ ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
        КонецЕсли;
        
        ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(ДанныеДокументов.Ссылка, 1, 120);
        
        Если НЕ ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
            ТекстСообщения = НСтр("ru = Не удалось сформировать QR-код. 
            |Технические подробности см. в журнале регистрации.'");
            ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
        Иначе
            КартинкаQRКода = Новый Картинка(ДанныеQRКода);
            ОбластьЗаголовок.Рисунки.КартинкаQRКода.Картинка = КартинкаQRКода;
        КонецЕсли;            
            
        ОбластьЗаголовок.Параметры.НомерДокумента = ДанныеДокументов.Номер;
        ОбластьЗаголовок.Параметры.ДатаДокумента = Формат(ДанныеДокументов.Дата,"ДФ='dd.MM.yyyy ""г.""'");
        ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокументов);         
        ТабДок.Вывести(ОбластьЗаголовок);
        
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		ИтогоСуммаЦифрами = ВывестиТаблицуАктаОбОказанныхУслугах(ДанныеДокументов, ТабДок, Макет);
        
        ИтогоСуммаПрописью = ЧислоПрописью(
            ИтогоСуммаЦифрами,
            "Л = ru_RU; ДП = Истина",
            "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
            
        ОбластьПодвал.Параметры.СуммаЦифрами = ИтогоСуммаЦифрами;
        ОбластьПодвал.Параметры.СуммаПрописью = ИтогоСуммаПрописью;
        
        ТабДок.Вывести(ОбластьПодвал);
        
        ВставлятьРазделительСтраниц = Истина;
        
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента( 
			ТабДок,
			НомерСтрокиНачало,
			ОбъектыПечати,
			ДанныеДокументов.Ссылка);
			
	КонецЦикла;
	
	Возврат ТабДок;
		
КонецФункции

Функция ПолучитьДанныеДокументов(МассивОбъектов)
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
		|	РеализацияТоваровУслуг.Номер КАК Номер,
		|	РеализацияТоваровУслуг.Дата КАК Дата,
		|	РеализацияТоваровУслуг.Организация КАК Организация,
		|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
		|	РеализацияТоваровУслуг.Договор КАК Договор,
		|	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента,
		|	РеализацияТоваровУслуг.Услуги.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Количество КАК Количество,
		|		Цена КАК Цена,
		|		Сумма КАК Сумма
		|	) КАК Услуги
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В (&СписокДокументов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов", МассивОбъектов);
	
	Возврат Запрос.Выполнить().Выбрать();
		
КонецФункции 

Функция ВывестиТаблицуАктаОбОказанныхУслугах(ДанныеДокументов, ТабДок, Макет);
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	ИтогоСуммаЦифрами = 0;
	
	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	
	ВыборкаУслуги = ДанныеДокументов.Услуги.Выбрать();
	
	Пока ВыборкаУслуги.Следующий() Цикл
		
		ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаУслуги);
		ТабДок.Вывести(ОбластьСтрокаТаблицы);
		
		ИтогоСуммаЦифрами = ИтогоСуммаЦифрами + ВыборкаУслуги.Сумма;
		
	КонецЦикла;
	
	Возврат ИтогоСуммаЦифрами;
		
КонецФункции
// ВКМ_ДоработкиКонец 20.03.2024 

#КонецОбласти

#КонецЕсли