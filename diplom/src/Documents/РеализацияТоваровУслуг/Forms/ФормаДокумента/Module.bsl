
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ВКМ_ДоработкиНачало 
	ВКМ_ДобавитьКнопкуЗаполнить();
	// ВКМ_ДоработкиКонец
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

// ВКМ_ДоработкиНачало 19.03.2024
&НаКлиенте
Процедура ВКМ_ВыполнитьКомандуЗаполнить(Команда)
    
    Если Объект.Услуги.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru = 'Перед заполнением табличная часть будет очищена. Очистить?'");
		ОписаниеОповещенияОЗавершении = Новый ОписаниеОповещения("ВопросПередЗаполнениемТабличнойЧасти", ЭтотОбъект);
        Кнопки = РежимДиалогаВопрос.ДаНетОтмена;
        ДополнительныеПараметры = Новый Структура;
        ДополнительныеПараметры.Вставить("Заголовок", "Заполнение");
        
        СтандартныеПодсистемыКлиент.ПоказатьВопросПользователю(ОписаниеОповещенияОЗавершении, 
            ТекстВопроса, 
            Кнопки, 
            ДополнительныеПараметры);
	
	Иначе		
		ВКМ_ЗаполнитьДокумент();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗаполнениемТабличнойЧасти(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса.Значение = КодВозвратаДиалога.Да Тогда			
		Объект.Услуги.Очистить();
		ВКМ_ЗаполнитьДокумент();				
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВКМ_ДобавитьКнопкуЗаполнить()
	
	КомандаСформироватьТаблицу = Команды.Добавить("Заполнить");
	КомандаСформироватьТаблицу.Действие = "ВКМ_ВыполнитьКомандуЗаполнить";
	КомандаСформироватьТаблицу.Заголовок = "Заполнить";
	КнопкаСформироватьТаблицу = Элементы.Добавить("КнопкаСформироватьТаблицу",
		Тип("КнопкаФормы"),
		Элементы.ФормаКоманднаяПанель);
	КнопкаСформироватьТаблицу.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	КнопкаСформироватьТаблицу.ЦветФона = Новый Цвет(255, 255, 224);
	КнопкаСформироватьТаблицу.ИмяКоманды = "Заполнить";
	
КонецПроцедуры

&НаСервере
Процедура ВКМ_ЗаполнитьДокумент()
		
	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Договор, 
        "ВидДоговора, ВКМ_ДатаНачалаДействияДоговора, ВКМ_ДатаОкончанияДействияДоговора");
		
	Если РеквизитыДоговора.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		
        ОбщегоНазначения.СообщитьПользователю("Договор не является договором вида 'Абонентское обслуживание'.
            |Выберите другой договор или измените вид на 'Абонентское обслуживание'.", , , , Истина);
		Возврат;
	
	КонецЕсли;
		
	Если РеквизитыДоговора.ВКМ_ДатаНачалаДействияДоговора > Объект.Дата
        ИЛИ РеквизитыДоговора.ВКМ_ДатаОкончанияДействияДоговора < Объект.Дата Тогда
		
        ОбщегоНазначения.СообщитьПользователю("Дата документа не попадает в период действия договора.
            |Укажите другую дату документа.", , , , Истина);
        Возврат;
	
	КонецЕсли;	
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ВКМ_ВыполнитьАвтозаполнение(ДокументОбъект.Договор);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	Модифицированность = Истина;
	
КонецПроцедуры
// ВКМ_ДоработкиКонец 19.03.2024

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
