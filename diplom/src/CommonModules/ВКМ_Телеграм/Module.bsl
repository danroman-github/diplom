
#Область СлужебныеПроцедурыИФункции

Процедура ВКМ_ОтправкаУведомленийТелеграм() Экспорт
	
	Если НЕ ЗначениеЗаполнено(Константы.ВКМ_ТокенУправленияТелеграмБотом.Получить())
		ИЛИ НЕ ЗначениеЗаполнено(Константы.ВКМ_ИдентификаторГруппыДляОповещения.Получить()) Тогда
		Возврат;
	КонецЕсли;
	
	УведомленияДляОтправки = Справочники.ВКМ_УведомленияТелеграмБоту.УведомленияДляОтправки();
	
	Для Каждого ЭлементМассива Из УведомленияДляОтправки Цикл
		
		УспешноОтправлено = Истина;
		ОтправитьСообщениеТелеграмБоту(ЭлементМассива.ТекстСообщения, УспешноОтправлено);
		
		Если УспешноОтправлено Тогда
			ОбъектДляУдаления = ЭлементМассива.Ссылка.ПолучитьОбъект();
			ОбъектДляУдаления.Удалить();
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Процедура ОтправитьСообщениеТелеграмБоту(ПередаваемыйТекст, УспешноОтправлено)
	
	ГруппаID = Константы.ВКМ_ИдентификаторГруппыДляОповещения.Получить();
	Токен = Константы.ВКМ_ТокенУправленияТелеграмБотом.Получить();	
	
	АдресРесурса = "bot"+Токен+"/sendMessage?chat_id="+ГруппаID+"&text="+ПередаваемыйТекст;
	
	Соединение = Новый HTTPСоединение("api.telegram.org", , , , , ,Новый  ЗащищенноеСоединениеOpenSSL(, ));
	
	Запрос = Новый HTTPЗапрос(АдресРесурса);
	Запрос.Заголовки.Вставить("Content-type", "application/json");
	
	Ответ = Соединение.Получить(Запрос);
	
	Если Ответ.КодСостояния <> 200 Тогда
		
		//@skip-check object-deprecated
		СтрокаОтвета = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации("HTTPСервисы.Ошибка", УровеньЖурналаРегистрации.Ошибка,,, СтрокаОтвета,);
		УспешноОтправлено = Ложь;
		
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации("HTTPСервисы.Отправка", 
		УровеньЖурналаРегистрации.Информация,
		,
		, 
		"Сообщение в телеграм отправлено",);
	
КонецПроцедуры

#КонецОбласти